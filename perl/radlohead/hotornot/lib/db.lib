###############################################################################################
###############################################################################################
##
##  db.lib
##
###############################################################################################
###############################################################################################

use strict;

###############################################################################################

use constant DB_FILE => BASE . "hotornot/files/db";
use constant DB_PERMS => 0666;

###############################################################################################

my %db;

###############################################################################################

###############################################################################################
##
##  add_picture( name, url )
##
###############################################################################################

sub add_picture {

  my ( $name, $url ) = @_;

  my $rh_pic = get_pic( $name );
  my ( $new_entry, $id ) = ( $name . ":#:" . $url . ":#:0:#:0" );

  open_db();
  if ( $rh_pic && ( $rh_pic->{'id'} ne '' ) ) {
      $id = $rh_pic->{'id'};
      $db{ $rh_pic->{'id'} } = $new_entry;
  } else {
    $id = $db{'count'};
    $db{ $db{'count'}++ } = $new_entry;
  }
  close_db();

  return $id;

}

###############################################################################################
##
##  random_pic( last_index ) : rh_pic
##
###############################################################################################

sub random_pic {

  my ( $last_index ) = @_;

  open_db();

  my ( $rand_index ) = 0;

  while ( (!$rand_index) || ($rand_index eq $last_index) ) {
    $rand_index = rand() * 1000 % $db{'count'};
  }

  my ( $name, $url ) = split( /:#:/, $db{ $rand_index } );

  close_db();

  return { 'name' => $name, 'url' => $url, 'id' => $rand_index };

}

###############################################################################################
##
##  cast_vote( id, score ) : ( name, score )
##
###############################################################################################

sub cast_vote {

  my ( $id, $score ) = @_;

  open_db();

  my ( $name, $url, $votes, $total ) = split( /:#:/, $db{ $id } );

  $votes++;
  $total = $total + $score;

  $db{ $id } = $name . ":#:" . $url . ":#:" . $votes . ":#:" . $total;

  close_db();

  return ( $name, compute_score( $votes, $total ) );

}

###############################################################################################
##
##  get_pic( username ) : rh_pic
##
###############################################################################################

sub get_pic {

  my ( $username ) = @_;

  open_db();

  foreach my $key ( keys %db ) {
    if ( $db{$key} =~ /$username:#:/i ) {

      my ( $name, $url, $votes, $total ) = split( /:#:/, $db{$key} );
      close_db();
      return {
               'name' => $name,
               'url' => $url,
               'score' => compute_score( $votes, $total ),
               'votes' => $votes,
               'id' => $key
             };
    }
  }

}

##############################################################################################
##
##  get_pic_id( id )
##
##############################################################################################

sub get_pic_id {

  my ( $id ) = @_;

  open_db();

  my ( $name, $url, $votes, $total ) = split( /:#:/, $db{ $id } );

  close_db();

  return {
           'name' => $name,
           'url' => $url,
           'id' => $id
         };

}

##############################################################################################
##
##  open_db()
##  close_db()
##
###############################################################################################

sub open_db() {

  dbmopen %db, DB_FILE, DB_PERMS;
  if ( !$db{'count'} ) {
    $db{'count'} = 1;
  }

}

sub close_db() { dbmclose %db; }

###############################################################################################
##
##  compute_score( votes, total ) : score
##
###############################################################################################

sub compute_score {

  my ( $votes, $total ) = @_;

  my $av;
  eval {
    $av = $total / $votes;
  };

  return $av;

}

###############################################################################################

1;

###############################################################################################
###############################################################################################