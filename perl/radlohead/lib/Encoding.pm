###############################################################################################
###############################################################################################
##
##  encoding.lib
##
###############################################################################################
###############################################################################################

package Encoding;

###############################################################################################

use strict;

###############################################################################################
##
##  encode( text )
##
###############################################################################################

sub encode {

  my ( $text ) = @_;

  $text =~ s/([^a-z0-9_.~-])/ sprintf "%%%02X", ord($1)/eig;

  return $text;

}

###############################################################################################
##
##  decode( text )
##
###############################################################################################

sub decode {

  my ( $text ) = @_;

  $text =~ tr/+/ /;
  $text =~ s/%([\dA-Fa-f][\dA-Fa-f])/pack("C",hex($1))/eg;

  return $text;

}

###############################################################################################

1;

###############################################################################################
###############################################################################################