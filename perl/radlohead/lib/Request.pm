###############################################################################################
###############################################################################################
##
##  Request.pm
##
###############################################################################################
###############################################################################################

package Request;

###############################################################################################

use strict;

use lib ( @INC, main::BASE . 'lib' );
use Encoding;

###############################################################################################

use constant PAIR_SEP => '\|';
use constant VAL_SEP => '=';
use constant QUERY_STRING => 'qs';
use constant VARS => 'vars';

###############################################################################################
##
##  new()
##
###############################################################################################

sub new {

  my ( $pkg ) = shift;

  my $self = bless {}, $pkg;

  $self->set_query_string();
  $self->set_vars();

  return $self;

}

###############################################################################################
##
##  param( name ) : array
##
###############################################################################################

sub param {

  my ( $self ) = shift;
  my ( $name ) = @_;

  return $self->{ VARS }->{ $name };

}

###############################################################################################
##
##  Vars()
##
###############################################################################################

sub Vars {

  my ( $self ) = shift;

  return $self->{ VARS };

}

###############################################################################################
##
##  set_vars()
##
###############################################################################################

sub set_vars {

  my ( $self ) = shift;

  my ( $rh_vars );
  my ( $pair_sep, $val_sep ) = ( PAIR_SEP, VAL_SEP );
  my ( @pairs ) = split( /$pair_sep/, $self->{ QUERY_STRING } );

  foreach my $pair ( @pairs ) {

    my ( $name, $value ) = split( /$val_sep/, $pair );

    $name = Encoding::decode( $name );
    $value = Encoding::decode( $value );

    $rh_vars->{ $name } = $value;

  }

  $self->{ VARS } = $rh_vars;

}

###############################################################################################
##
##  set_query_string()
##
###############################################################################################

sub set_query_string {

  my ( $self ) = shift;

  if ( uc( $ENV{'REQUEST_METHOD'} ) eq 'POST' ) {

    require CGI;

    my $q = new CGI;

    $self->{ QUERY_STRING } = $q->query_string();
    $self->{ QUERY_STRING } =~ s/;/|/g;
    $self->{ QUERY_STRING } =~ s/&/|/g;

  } else {

    $self->{ QUERY_STRING } = $ENV{'QUERY_STRING'};
    $self->{ QUERY_STRING } =~ s/&/|/g;

  }

}

###############################################################################################
##
##  redirect( url )
##
###############################################################################################

sub redirect {

  my ( $self ) = shift;
  my ( $url ) = @_;

  require CGI;

  my $q = new CGI();

  return $q->redirect( $url );

}

###############################################################################################

1;

###############################################################################################
###############################################################################################