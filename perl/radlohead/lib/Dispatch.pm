###############################################################################################
###############################################################################################
##
##  Dispatch.pm
##
###############################################################################################
###############################################################################################

package Dispatch;

###############################################################################################

use strict;

###############################################################################################

###############################################################################################
##
##  Dispatch::new()
##
###############################################################################################

sub new {

  my ( $pkg ) = shift;

  return bless {}, $pkg;

}

###############################################################################################
##
##  Dispatch::load( name, value, etc... )
##
###############################################################################################

sub load {

  my ( $self ) = shift;

  while ( @_ ) {

    my ( $name ) = shift;
    my ( $value ) = shift;

    $self->{ $name } = $value;

  }

  $self->{ '-default' } = 'draw_page' unless $self->{ '-default' };

}

###############################################################################################
##
##  Dispatch::execute( param )
##
###############################################################################################

sub execute {

  my ( $self ) = shift;
  my ( $param ) = @_;

  my ( $rs );

  if ( $self->{ '-'.$param } ) {
    $rs = $self->{ '-'.$param };
  } else {
    $rs = $self->{ '-default' };
  }

  if ( ref( $rs ) ne "CODE" ) {
    local *GLOB;
    $rs = *GLOB = "main::" . $rs;
  }

  &$rs();

}

###############################################################################################

1;

###############################################################################################
###############################################################################################